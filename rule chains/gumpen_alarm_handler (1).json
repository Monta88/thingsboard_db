{
  "ruleChain": {
    "additionalInfo": {
      "description": "Create/Clear Alarm & send Email"
    },
    "name": "gumpen_alarm_handler",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 2,
    "nodes": [
      {
        "additionalInfo": {
          "layoutX": 488,
          "layoutY": 393
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Under Threshold",
        "debugMode": false,
        "configuration": {
          "jsScript": "return msg.alarm == 1;\n//return msg.temperature1 < -30 || msg.temperature1 > 50;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 800,
          "layoutY": 259
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Create Alarm",
        "debugMode": false,
        "configuration": {
          "alarmType": "General Alarm",
          "alarmDetailsBuildJs": "var details = {};\ndetails.alarm= msg.alarm;\n\nreturn details;\n\n\n/*\n\nvar details = {};\ndetails.alarm= msg.alarm;\nif (metadata.prevAlarmDetails) {\n    var prevDEtails = JSON.parse(metadata.prevAlarmDetails);\n   // details.count = prevDEtails.count + 1;\n}else\n{\n  //  details.count = 1;\n}\nreturn details;\n*/",
          "severity": "CRITICAL",
          "propagate": true,
          "useMessageAlarmData": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 193,
          "layoutY": 394
        },
        "type": "org.thingsboard.rule.engine.filter.TbCheckMessageNode",
        "name": "check filed",
        "debugMode": false,
        "configuration": {
          "messageNames": [
            "alarm"
          ],
          "metadataNames": [],
          "checkAllKeys": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1174,
          "layoutY": 413
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "save in db",
        "debugMode": false,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 785,
          "layoutY": 567
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear Alarm",
        "debugMode": false,
        "configuration": {
          "alarmType": "General Alarm",
          "alarmDetailsBuildJs": " var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\ndetails.ClearedAlarm = msg.alarm;\nreturn details;\n/*\nvar details = {alarm: msg.Alarm, count: 1};\n\nif (metadata.prevAlarmDetails) {\n    var prevDetails = JSON.parse(metadata.prevAlarmDetails);\n    if(prevDetails.count) {\n        details.count = prevDetails.count + 1;\n    }\n}\n*/\n//return details;\n\n////////////////////////////////////////\n/*var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\n//details.ClearedAlarm = msg.alarm;\nreturn details*/\n\n/*\nvar details = {alarm: msg.alarm, count: 0};\n\nif (metadata.prevAlarmDetails) {\n    var prevDetails = JSON.parse(metadata.prevAlarmDetails);\n    if(prevDetails.count) {\n        details.count = prevDetails.count + 1;\n    }\n}\n\nreturn details;\n\n*/"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1343,
          "layoutY": 249
        },
        "type": "org.thingsboard.rule.engine.mail.TbSendEmailNode",
        "name": "Send Email SMTP",
        "debugMode": false,
        "configuration": {
          "useSystemSmtpSettings": true,
          "smtpHost": "smtp.office365.com",
          "smtpPort": 587,
          "username": "mj@iotsolutions.no",
          "password": "Monta_2019_iot",
          "smtpProtocol": "smtp",
          "timeout": 10000,
          "enableTls": true
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1062,
          "layoutY": 252
        },
        "type": "org.thingsboard.rule.engine.mail.TbMsgToEmailNode",
        "name": "Temperature Email",
        "debugMode": false,
        "configuration": {
          "fromTemplate": "thingsboard@iots.no",
          "toTemplate": "mj@iotsolutions.no",
          "ccTemplate": null,
          "bccTemplate": null,
          "subjectTemplate": "Alarm Device: ${deviceType}",
          "bodyTemplate": "Device ${deviceName} has General alarm."
        }
      },
      {
        "additionalInfo": {
          "layoutX": 604,
          "layoutY": 55
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Add temperature to metdata",
        "debugMode": false,
        "configuration": {
          "jsScript": "metadata.temperature = msg.temperature;\r\n return {msg: msg, metadata: metadata, msgType: msgType};"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 71,
          "layoutY": 676
        },
        "type": "org.thingsboard.rule.engine.analytics.latest.alarm.TbAlarmsCountNode",
        "name": "Alarms counting",
        "debugMode": false,
        "configuration": {
          "parentEntitiesQuery": {
            "type": "relationsQuery",
            "rootEntityId": {
              "entityType": "ASSET",
              "id": "39efd180-ca60-11e9-adb0-999291330ae2"
            },
            "relationsQuery": {
              "direction": "FROM",
              "maxLevel": 6,
              "filters": [
                {
                  "relationType": "Contains",
                  "entityTypes": [
                    "ASSET",
                    "DEVICE"
                  ]
                }
              ]
            },
            "childRelationsQuery": {
              "direction": "FROM",
              "maxLevel": 5,
              "filters": [
                {
                  "relationType": "Contains",
                  "entityTypes": [
                    "DEVICE",
                    "ASSET"
                  ]
                }
              ]
            }
          },
          "periodTimeUnit": "MINUTES",
          "periodValue": 1,
          "countAlarmsForChildEntities": true,
          "alarmsCountMappings": [
            {
              "target": "alarmsCount",
              "typesList": [],
              "severityList": [],
              "statusList": [
                "ACTIVE_UNACK",
                "ACTIVE_ACK",
                "CLEARED_ACK",
                "CLEARED_UNACK"
              ],
              "latestInterval": 0
            }
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 495,
          "layoutY": 315
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Documentation",
        "debugMode": false,
        "configuration": {
          "jsScript": "/*\nstep1:We are filtring all the devices who have an attribute with a key name \"alarm\"\nstep2:check if the alarm= 1 => create an alarm\nelse clear the alarm\nStep3: send a notification email to the specific customer responsible of that device.\n*/"
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 4,
        "type": "False"
      },
      {
        "fromIndex": 0,
        "toIndex": 1,
        "type": "True"
      },
      {
        "fromIndex": 1,
        "toIndex": 6,
        "type": "Created"
      },
      {
        "fromIndex": 2,
        "toIndex": 0,
        "type": "True"
      },
      {
        "fromIndex": 6,
        "toIndex": 5,
        "type": "Success"
      }
    ],
    "ruleChainConnections": null
  }
}