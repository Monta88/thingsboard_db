{
  "ruleChain": {
    "additionalInfo": null,
    "name": "chris_aggregate_energy_power",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 25,
    "nodes": [
      {
        "additionalInfo": {
          "layoutX": 1281,
          "layoutY": 481
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "save",
        "debugMode": false,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 425,
          "layoutY": 477
        },
        "type": "org.thingsboard.rule.engine.filter.TbCheckMessageNode",
        "name": "sa_sum_main_active_power_positive",
        "debugMode": false,
        "configuration": {
          "messageNames": [
            "sa_sum_main_active_power_positive"
          ],
          "metadataNames": [],
          "checkAllKeys": true
        }
      },
      {
        "additionalInfo": {
          "layoutX": 427,
          "layoutY": 526
        },
        "type": "org.thingsboard.rule.engine.filter.TbCheckMessageNode",
        "name": "sa_sum_main_active_energy_import",
        "debugMode": false,
        "configuration": {
          "messageNames": [
            "sa_sum_main_active_energy_import"
          ],
          "metadataNames": [],
          "checkAllKeys": true
        }
      },
      {
        "additionalInfo": {
          "layoutX": 667,
          "layoutY": 478
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "active_power_positive",
        "debugMode": false,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "sa_sum_main_active_power_positive",
            "sa_sum_circuit_active_power_positive"
          ],
          "latestTsKeyNames": [],
          "tellFailureIfAbsent": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 663,
          "layoutY": 533
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "active_energy_import",
        "debugMode": false,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "sa_sum_main_active_energy_import",
            "sa_sum_circuit_active_energy_import"
          ],
          "latestTsKeyNames": [],
          "tellFailureIfAbsent": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1322,
          "layoutY": 1269
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "alarm",
        "debugMode": false,
        "configuration": {
          "alarmType": "General Alarm",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\n\n\n//details.metadata = metadata;\n//details.metadata.msg = msg;\n/*\ntry {\n    details.metadata.msg = JSON.parse(JSON.stringify(msg));    \n} catch (e) {}\n*/\nreturn details;\n\n\n",
          "severity": "CRITICAL",
          "propagate": false,
          "useMessageAlarmData": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1075,
          "layoutY": 1313
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "iot1923_energy_calculation_heating",
        "debugMode": false,
        "configuration": {
          "jsScript": "return (metadata.originatorName == 'iot1923_energy_calculation_heating') && (msg.ts_sum_circuit_active_energy_import > 0);"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1405,
          "layoutY": 655
        },
        "type": "org.thingsboard.rule.engine.filter.TbCheckMessageNode",
        "name": "check field",
        "debugMode": false,
        "configuration": {
          "messageNames": [
            "ts_sum_circuit_active_energy_import",
            "ts_rest_active_energy_import"
          ],
          "metadataNames": [],
          "checkAllKeys": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 565,
          "layoutY": 867
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetOriginatorFieldsNode",
        "name": "metainfo",
        "debugMode": false,
        "configuration": {
          "fieldsMapping": {
            "name": "originatorName",
            "type": "originatorType"
          }
        }
      },
      {
        "additionalInfo": {
          "layoutX": 606,
          "layoutY": 1315
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Documentation",
        "debugMode": false,
        "configuration": {
          "jsScript": "/*\n\nCalculate the rest/difference between sa_sum_main_<x> and sa_sum_circuit_<x> values and store the result in sa_rest_<x>\n\nMeasurements are named differently for main meterering and circuit metering. \nVariables are prefixed 'sa' for server attributes and ts for time series.\nSecond prefix is 'main' for main meters and 'circuit' for circuits\n\nCalculations:\nsa:sa_rest_active_power_positive = sa:sa_sum_main_active_power_positive - sa:sa_sum_circuit_active_power_positive;\nsa:sa_rest_active_power_negative = sa:sa_sum_main_active_power_negative - sa:sa_sum_circuit_active_power_negative;\nsa:sa_rest_active_energy_import  = sa:sa_sum_main_active_energy_import  - sa:sa_sum_circuit_active_energy_import;\nsa:sa_rest_active_energy_export  = sa:sa_sum_main_active_energy_export  - sa:sa_sum_circuit_active_energy_export;\n\n*/\n\nreturn false;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 879,
          "layoutY": 37
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Documentation",
        "debugMode": false,
        "configuration": {
          "jsScript": "/*\n\nDuplicate messages and copy values from timeseries to server attribute.\nThe main purpose is to make a workaround for \"aggregate latest\" as this function fails when aggregating time series data over 1 level.\n\nMeasurements are named differently for main meterering and circuit metering. \nVariables are prefixed 'sa' for server attributes and 'ts' for time series.\nSecond prefix is 'main' for main meters and 'circuit' for circuits\n\nMain metering devices:\nsa:sa_main_active_power_positive = ts:active_power_positive;\nsa:sa_main_active_power_negative = ts:active_power_negative;\nsa:sa_main_active_energy_import  = ts:active_energy_import;\nsa:sa_main_active_energy_export  = ts:active_energy_export;\n\ncircuit devices:\nsa:sa_circuit_active_power_positive = ts:active_power_positive;\nsa:sa_circuit_active_power_negative = ts:active_power_negative;\nsa:sa_circuit_active_energy_import  = ts:active_energy_import;\nsa:sa_circuit_active_energy_export  = ts:active_energy_export;\n\n*/\n\nreturn false;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1467,
          "layoutY": 319
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "save",
        "debugMode": false,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 651,
          "layoutY": 385
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "save",
        "debugMode": false,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 75,
          "layoutY": 382
        },
        "type": "org.thingsboard.rule.engine.analytics.latest.telemetry.TbAggLatestTelemetryNode",
        "name": "Device - Asset",
        "debugMode": false,
        "configuration": {
          "parentEntitiesQuery": {
            "type": "relationsQuery",
            "rootEntityId": {
              "entityType": "ASSET",
              "id": "31e12390-7fc3-11ea-947e-e79c2b4e0867"
            },
            "relationsQuery": {
              "direction": "FROM",
              "maxLevel": 4,
              "filters": [
                {
                  "relationType": "Contains",
                  "entityTypes": [
                    "ASSET"
                  ]
                }
              ]
            },
            "childRelationsQuery": {
              "direction": "FROM",
              "maxLevel": 1,
              "filters": [
                {
                  "relationType": "Contains",
                  "entityTypes": [
                    "DEVICE"
                  ]
                }
              ]
            }
          },
          "periodTimeUnit": "MINUTES",
          "periodValue": 1,
          "aggMappings": [
            {
              "source": "active_power_positive",
              "sourceScope": "LATEST_TELEMETRY",
              "defaultValue": 0,
              "target": "sa_active_power_positive",
              "aggFunction": "SUM"
            },
            {
              "source": "active_power_negative",
              "sourceScope": "LATEST_TELEMETRY",
              "defaultValue": 0,
              "target": "sa_active_power_negative",
              "aggFunction": "SUM"
            },
            {
              "source": "active_energy_import",
              "sourceScope": "LATEST_TELEMETRY",
              "defaultValue": 0,
              "target": "sa_active_energy_import",
              "aggFunction": "SUM"
            },
            {
              "source": "active_energy_export",
              "sourceScope": "LATEST_TELEMETRY",
              "defaultValue": 0,
              "target": "sa_active_energy_export",
              "aggFunction": "SUM"
            },
            {
              "source": "active_power_positive",
              "sourceScope": "LATEST_TELEMETRY",
              "defaultValue": 0,
              "target": "sa_active_count",
              "aggFunction": "COUNT"
            }
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1081,
          "layoutY": 720
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "To telemetry",
        "debugMode": false,
        "configuration": {
          "jsScript": "// Convert message and store it as calc to POST_TIMESERIES_REQUEST\n\nvar msg_ts = {};\n\n//if (msg.hasOwnProperty(\"sa_sum_main_active_power_positive\")) msg_ts.ts_sum_main_active_power_positive = msg.sa_sum_main_active_power_positive;\n//if (msg.hasOwnProperty(\"sa_sum_main_active_power_negative\")) msg_ts.ts_sum_main_active_power_negative = msg.sa_sum_main_active_power_negative;\n//if (msg.hasOwnProperty(\"sa_sum_main_active_energy_import\"))  msg_ts.ts_sum_main_active_energy_import  = msg.sa_sum_main_active_energy_import;\n//if (msg.hasOwnProperty(\"sa_sum_main_active_energy_export\"))  msg_ts.ts_sum_main_active_energy_export  = msg.sa_sum_main_active_energy_export;\n\nif (msg.hasOwnProperty(\"sa_sum_circuit_active_power_positive\")) msg_ts.ts_sum_circuit_active_power_positive = msg.sa_sum_circuit_active_power_positive;\n//if (msg.hasOwnProperty(\"sa_sum_circuit_active_power_negative\")) msg_ts.ts_sum_circuit_active_power_negative = msg.sa_sum_circuit_active_power_negative;\nif (msg.hasOwnProperty(\"sa_sum_circuit_active_energy_import\"))  msg_ts.ts_sum_circuit_active_energy_import  = msg.sa_sum_circuit_active_energy_import;\n//if (msg.hasOwnProperty(\"sa_sum_circuit_active_energy_export\"))  msg_ts.ts_sum_circuit_active_energy_export  = msg.sa_sum_circuit_active_energy_export;\n\nif (msg.hasOwnProperty(\"sa_rest_active_power_positive\")) msg_ts.ts_rest_active_power_positive = msg.sa_rest_active_power_positive;\n//if (msg.hasOwnProperty(\"sa_rest_active_power_negative\")) msg_ts.ts_rest_active_power_negative = msg.sa_rest_active_power_negative;  \nif (msg.hasOwnProperty(\"sa_rest_active_energy_import\"))  msg_ts.ts_rest_active_energy_import  = msg.sa_rest_active_energy_import;\n//if (msg.hasOwnProperty(\"sa_rest_active_energy_export\"))  msg_ts.ts_rest_active_energy_export  = msg.sa_rest_active_energy_export;\n\nvar msgType_ts_ptr = \"POST_TELEMETRY_REQUEST\";\n\nreturn {msg: msg_ts, metadata: metadata, msgType: msgType_ts_ptr};\n\n\n\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1137,
          "layoutY": 31
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Main: ts->sa_main",
        "debugMode": false,
        "configuration": {
          "jsScript": "// Convert message and store it as tmp to POST_ATTRIBUTES_REQUEST\n\n\nvar msg_sa_main = {};\n\nif (msg.hasOwnProperty(\"active_power_positive\")) msg_sa_main.sa_main_active_power_positive = msg.active_power_positive;\nif (msg.hasOwnProperty(\"active_power_negative\")) msg_sa_main.sa_main_active_power_negative = msg.active_power_negative;\nif (msg.hasOwnProperty(\"active_energy_import\"))  msg_sa_main.sa_main_active_energy_import  = msg.active_energy_import;\nif (msg.hasOwnProperty(\"active_energy_export\"))  msg_sa_main.sa_main_active_energy_export  = msg.active_energy_export;\n\nvar msgType_sa_par_main = \"POST_ATTRIBUTES_REQUEST\";\n\nreturn {msg: msg_sa_main, metadata: metadata, msgType: msgType_sa_par_main};\n\n\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1129,
          "layoutY": 322
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Circuit: ts->sa_circuit",
        "debugMode": false,
        "configuration": {
          "jsScript": "// Convert message and store it as tmp to POST_ATTRIBUTES_REQUEST\n\n\nvar msg_sa_circuit = {};\n\nif (msg.hasOwnProperty(\"active_power_positive\")) msg_sa_circuit.sa_circuit_active_power_positive = msg.active_power_positive;\nif (msg.hasOwnProperty(\"active_power_negative\")) msg_sa_circuit.sa_circuit_active_power_negative = msg.active_power_negative;\nif (msg.hasOwnProperty(\"active_energy_import\"))  msg_sa_circuit.sa_circuit_active_energy_import  = msg.active_energy_import;\nif (msg.hasOwnProperty(\"active_energy_export\"))  msg_sa_circuit.sa_circuit_active_energy_export  = msg.active_energy_export;\n\nvar msgType_sa_par_circuit = \"POST_ATTRIBUTES_REQUEST\";\n\nreturn {msg: msg_sa_circuit, metadata: metadata, msgType: msgType_sa_par_circuit};\n\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 469,
          "layoutY": 1429
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Sums to meta",
        "debugMode": false,
        "configuration": {
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "sa_sum_main_active_power_positive",
            "sa_sum_main_active_power_negative",
            "sa_sum_main_active_energy_import",
            "sa_sum_main_active_energy_export",
            "sa_sum_circuit_active_power_positive",
            "sa_sum_circuit_active_power_negative",
            "sa_sum_circuit_active_energy_import",
            "sa_sum_circuit_active_energy_export"
          ],
          "latestTsKeyNames": [],
          "tellFailureIfAbsent": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1456,
          "layoutY": 25
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "save",
        "debugMode": false,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 293,
          "layoutY": 260
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Documentation",
        "debugMode": false,
        "configuration": {
          "jsScript": "/*\n\nUse aggregation to \"move\" values from meters up from devices to parent asset. \nThe use of Sum() implies that assets should only have 1 child device.\nThe following values are moved and converted:\n\nts:active_energy_export     -> sa:sa_active_energy_export\nts:active_energy_import     -> sa:sa_active_energy_import\nts:active_power_negative    -> sa:sa_active_power_negative\nts:active_power_positive    -> sa:sa_active_power_positive\n\n*/\n\nreturn false;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 102,
          "layoutY": 496
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "save",
        "debugMode": false,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 838,
          "layoutY": 855
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "telemetry to attribute",
        "debugMode": false,
        "configuration": {
          "jsScript": "// Convert all messages to POST_ATTRIBUTES_REQUEST\n\nvar msgType_sa_par = \"POST_ATTRIBUTES_REQUEST\";\nreturn {msg: msg, metadata: metadata, msgType: msgType_sa_par};\n\n\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 26,
          "layoutY": 874
        },
        "type": "org.thingsboard.rule.engine.analytics.latest.telemetry.TbAggLatestTelemetryNode",
        "name": "Sum power and energy",
        "debugMode": false,
        "configuration": {
          "parentEntitiesQuery": {
            "type": "relationsQuery",
            "rootEntityId": {
              "entityType": "ASSET",
              "id": "86b3fb40-78d9-11ea-947e-e79c2b4e0867"
            },
            "relationsQuery": {
              "direction": "FROM",
              "maxLevel": 1,
              "filters": [
                {
                  "relationType": "Contains",
                  "entityTypes": [
                    "ASSET"
                  ]
                }
              ]
            },
            "childRelationsQuery": {
              "direction": "FROM",
              "maxLevel": 3,
              "filters": [
                {
                  "relationType": "Contains",
                  "entityTypes": [
                    "DEVICE"
                  ]
                }
              ]
            }
          },
          "periodTimeUnit": "MINUTES",
          "periodValue": 1,
          "aggMappings": [
            {
              "source": "sa_main_active_power_positive",
              "sourceScope": "SERVER_SCOPE",
              "defaultValue": 0,
              "target": "sa_sum_main_active_power_positive",
              "aggFunction": "SUM"
            },
            {
              "source": "sa_main_active_power_negative",
              "sourceScope": "SERVER_SCOPE",
              "defaultValue": 0,
              "target": "sa_sum_main_active_power_negative",
              "aggFunction": "SUM"
            },
            {
              "source": "sa_main_active_energy_import",
              "sourceScope": "SERVER_SCOPE",
              "defaultValue": 0,
              "target": "sa_sum_main_active_energy_import",
              "aggFunction": "SUM"
            },
            {
              "source": "sa_main_active_energy_export",
              "sourceScope": "SERVER_SCOPE",
              "defaultValue": 0,
              "target": "sa_sum_main_active_energy_export",
              "aggFunction": "SUM"
            },
            {
              "source": "sa_circuit_active_power_positive",
              "sourceScope": "SERVER_SCOPE",
              "defaultValue": 0,
              "target": "sa_sum_circuit_active_power_positive",
              "aggFunction": "SUM"
            },
            {
              "source": "sa_circuit_active_power_negative",
              "sourceScope": "SERVER_SCOPE",
              "defaultValue": 0,
              "target": "sa_sum_circuit_active_power_negative",
              "aggFunction": "SUM"
            },
            {
              "source": "sa_circuit_active_energy_import",
              "sourceScope": "SERVER_SCOPE",
              "defaultValue": 0,
              "target": "sa_sum_circuit_active_energy_import",
              "aggFunction": "SUM"
            },
            {
              "source": "sa_circuit_active_energy_export",
              "sourceScope": "SERVER_SCOPE",
              "defaultValue": 0,
              "target": "sa_sum_circuit_active_energy_export",
              "aggFunction": "SUM"
            },
            {
              "source": "sa_circuit_active_power_positive",
              "sourceScope": "SERVER_SCOPE",
              "defaultValue": 0,
              "target": "sa_circuit_count",
              "aggFunction": "COUNT"
            },
            {
              "source": "sa_main_active_power_positive",
              "sourceScope": "SERVER_SCOPE",
              "defaultValue": 0,
              "target": "sa_main_count",
              "aggFunction": "COUNT_UNIQUE"
            }
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 729,
          "layoutY": 1431
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "rest = sum_main - sum_circuit",
        "debugMode": false,
        "configuration": {
          "jsScript": "// Convert message and store it as calc to POST_ATTRIBUTES_REQUEST\n// Calculate the \"rest\" power from total_power and - consumed_power\n\nvar msg_sa_rest = {};\n\nif (metadata.hasOwnProperty(\"ss_sa_sum_main_active_power_positive\") && metadata.hasOwnProperty(\"ss_sa_sum_circuit_active_power_positive\"))\n{\n    msg_sa_rest.sa_rest_active_power_positive = metadata.ss_sa_sum_main_active_power_positive - metadata.ss_sa_sum_circuit_active_power_positive;\n}\n\nif (metadata.hasOwnProperty(\"ss_sa_sum_main_active_power_negative\") && metadata.hasOwnProperty(\"ss_sa_sum_circuit_active_power_negative\"))\n{\n    msg_sa_rest.sa_rest_active_power_negative = metadata.ss_sa_sum_main_active_power_negative - metadata.ss_sa_sum_circuit_active_power_negative;\n}\n\nif (metadata.hasOwnProperty(\"ss_sa_sum_main_active_energy_import\") && metadata.hasOwnProperty(\"ss_sa_sum_circuit_active_energy_import\"))\n{\n    msg_sa_rest.sa_rest_active_energy_import  = metadata.ss_sa_sum_main_active_energy_import  - metadata.ss_sa_sum_circuit_active_energy_import;\n}\n\nif (metadata.hasOwnProperty(\"ss_sa_sum_main_active_energy_export\") && metadata.hasOwnProperty(\"ss_sa_sum_circuit_active_energy_export\"))\n{\n    msg_sa_rest.sa_rest_active_energy_export  = metadata.ss_sa_sum_main_active_energy_export  - metadata.ss_sa_sum_circuit_active_energy_export;\n}\n\nreturn {msg: msg_sa_rest, metadata: metadata, msgType: msgType};\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1130,
          "layoutY": 1423
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode",
        "name": "save",
        "debugMode": false,
        "configuration": {
          "scope": "SERVER_SCOPE"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 311,
          "layoutY": 150
        },
        "type": "org.thingsboard.rule.engine.filter.TbOriginatorTypeSwitchNode",
        "name": "Device",
        "debugMode": false,
        "configuration": {
          "version": 0
        }
      },
      {
        "additionalInfo": {
          "layoutX": 599,
          "layoutY": 151
        },
        "type": "org.thingsboard.rule.engine.filter.TbCheckMessageNode",
        "name": "check field",
        "debugMode": false,
        "configuration": {
          "messageNames": [
            "active_power_positive",
            "active_power_negative",
            "active_energy_import",
            "active_energy_export"
          ],
          "metadataNames": [],
          "checkAllKeys": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1742,
          "layoutY": 653
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "save",
        "debugMode": false,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "layoutX": 374,
          "layoutY": 384
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "telemetry to attribute",
        "debugMode": false,
        "configuration": {
          "jsScript": "// Convert all messages to POST_ATTRIBUTES_REQUEST\n\nvar msgType_sa_par = \"POST_ATTRIBUTES_REQUEST\";\nreturn {msg: msg, metadata: metadata, msgType: msgType_sa_par};\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 866,
          "layoutY": 155
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsSwitchNode",
        "name": "Main or Circuit",
        "debugMode": false,
        "configuration": {
          "jsScript": "// Check if device is \"main\"\nvar main_filter = new RegExp(/main/ig);\nvar circuit_filter = new RegExp(/circuit/ig);\n\nif (main_filter.test(metadata.deviceType)) return ['main'];\nelse if (circuit_filter.test(metadata.deviceType)) return ['circuit'];\nelse return ['unknown'];\n\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 90,
          "layoutY": 779
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Documentation",
        "debugMode": false,
        "configuration": {
          "jsScript": "/*\n\nDuplicate messages and copy values from timeseries to server attribute.\nThe main purpose is to make a workaround for \"aggregate latest\" as this function fails when aggregating time series data over 1 level.\n\nNote: Mind the number of levbels to traverse to reach leaf-device nodes if there are sub-groups of circuits\nThe aggregation expects the following tree structure:\n\nAsset:energy_calculators_<customer> -> Asset:energy_calculator_<name> -> Asset:<group> -> Asset:<meter> -> Deice:<meter>\n* Devices can be at higher levels\n* All values from the measurement devices at all levels are summed\n\nMeasurements are named differently for main meterering and circuit metering. \nVariables are prefixed 'sa' for server attributes and ts for time series.\nSecond prefix is 'main' for main meters and 'circuit' for circuits\n\nFrom main metering devices:\nsa:sa_sum_main_active_power_positive = sum(sa:sa_main_active_power_positive);\nsa:sa_sum_main_active_power_negative = sum(sa:sa_main_active_power_negative);\nsa:sa_sum_main_active_energy_import  = sum(sa:sa_main_active_energy_import);\nsa:sa_sum_main_active_energy_export  = sum(sa:sa_main_active_energy_export);\n\nFrom circuit devices:\nsa:sa_sum_circuit_active_power_positive = sum(sa:sa_circuit_active_power_positive);\nsa:sa_sum_circuit_active_power_negative = sum(sa:sa_circuit_active_power_negative);\nsa:sa_sum_circuit_active_energy_import  = sum(sa:sa_circuit_active_energy_import);\nsa:sa_sum_circuit_active_energy_export  = sum(sa:sa_circuit_active_energy_export);\n\n*/\n\nreturn false;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1155,
          "layoutY": 623
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Documentation",
        "debugMode": false,
        "configuration": {
          "jsScript": "/*\n\nStore selected calculated values to timeseries in the calculationg asset\n\n*/\n\nreturn false;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1286,
          "layoutY": 883
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "script alarm",
        "debugMode": false,
        "configuration": {
          "alarmType": "General Alarm",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;\n",
          "severity": "CRITICAL",
          "propagate": false,
          "useMessageAlarmData": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1556,
          "layoutY": 883
        },
        "type": "org.thingsboard.rule.engine.mail.TbMsgToEmailNode",
        "name": "email",
        "debugMode": false,
        "configuration": {
          "fromTemplate": "no-reply@iots.no",
          "toTemplate": "jf@iotsolutions.no",
          "ccTemplate": null,
          "bccTemplate": null,
          "subjectTemplate": "Device ${deviceType} script error",
          "bodyTemplate": "Node: stormberg_aggregate_energy_power\n\nDevice: ${deviceName} \nDeviceType: ${deviceType}\nTs: ${ts}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1820,
          "layoutY": 875
        },
        "type": "org.thingsboard.rule.engine.mail.TbSendEmailNode",
        "name": "send email",
        "debugMode": false,
        "configuration": {
          "useSystemSmtpSettings": true,
          "smtpHost": "localhost",
          "smtpPort": 25,
          "username": null,
          "password": null,
          "smtpProtocol": "smtp",
          "timeout": 10000,
          "enableTls": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1216,
          "layoutY": 163
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "script alarm",
        "debugMode": false,
        "configuration": {
          "alarmType": "General Alarm",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;",
          "severity": "CRITICAL",
          "propagate": false,
          "useMessageAlarmData": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1511,
          "layoutY": 160
        },
        "type": "org.thingsboard.rule.engine.mail.TbMsgToEmailNode",
        "name": "email",
        "debugMode": false,
        "configuration": {
          "fromTemplate": "no-reply@iots.no",
          "toTemplate": "jf@iotsolutions.no",
          "ccTemplate": null,
          "bccTemplate": null,
          "subjectTemplate": "Device ${deviceType} script error",
          "bodyTemplate": "Node: stormberg_aggregate_energy_power\n\nDevice: ${deviceName} \nDeviceType: ${deviceType}\nTs: ${ts}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1805,
          "layoutY": 160
        },
        "type": "org.thingsboard.rule.engine.mail.TbSendEmailNode",
        "name": "send email",
        "debugMode": false,
        "configuration": {
          "useSystemSmtpSettings": true,
          "smtpHost": "localhost",
          "smtpPort": 25,
          "username": null,
          "password": null,
          "smtpProtocol": "smtp",
          "timeout": 10000,
          "enableTls": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1556,
          "layoutY": 758
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "gt",
        "debugMode": false,
        "configuration": {
          "jsScript": "var prev_sum = 0;\nvar prev_rest = 0;\n\ntry {\n    prev_sum = JSON.parse(metadata.ts_sum_circuit_active_energy_import);    \n} catch (e) {}\n\ntry {\n    prev_rest = JSON.parse(metadata.ts_rest_active_energy_import);\n} catch (e) {}\n\n// Do not store new value if less that previous\nif (msg.ts_sum_circuit_active_energy_import < prev_sum)\n{\n    delete msg.ts_sum_circuit_active_energy_import;\n}\n\n\n// Do not store new value if less that previous\nif (msg.ts_rest_active_energy_import < prev_rest)\n{\n    delete msg.ts_rest_active_energy_import;\n}\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};\n\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 311,
          "layoutY": 873
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetTelemetryNode",
        "name": "prev",
        "debugMode": false,
        "configuration": {
          "startInterval": 100,
          "endInterval": 1,
          "startIntervalPattern": "",
          "endIntervalPattern": "",
          "useMetadataIntervalPatterns": false,
          "startIntervalTimeUnit": "SECONDS",
          "endIntervalTimeUnit": "SECONDS",
          "fetchMode": "LAST",
          "orderBy": "ASC",
          "latestTsKeyNames": [
            "ts_sum_circuit_active_energy_import",
            "ts_rest_active_energy_import"
          ]
        }
      },
      {
        "additionalInfo": {
          "layoutX": 103,
          "layoutY": 1462
        },
        "type": "org.thingsboard.rule.engine.filter.TbCheckMessageNode",
        "name": "debug",
        "debugMode": false,
        "configuration": {
          "messageNames": [
            "debug"
          ],
          "metadataNames": [],
          "checkAllKeys": true
        }
      },
      {
        "additionalInfo": {
          "layoutX": 151,
          "layoutY": 1397
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Documentation",
        "debugMode": false,
        "configuration": {
          "jsScript": "/*\n\nEnsure that calculatet energy (rest/circuit_sum) is larger than prevoius (only increasing)\n\n*/\n\nreturn false;"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1559,
          "layoutY": 1321
        },
        "type": "org.thingsboard.rule.engine.mail.TbMsgToEmailNode",
        "name": "email",
        "debugMode": false,
        "configuration": {
          "fromTemplate": "no-reply@iots.no",
          "toTemplate": "jf@iotsolutions.no",
          "ccTemplate": null,
          "bccTemplate": null,
          "subjectTemplate": "Device ${deviceType} script error",
          "bodyTemplate": "Node: stormberg_aggregate_energy_power\n\nTs: ${ts}\n\nDevice: ${deviceName} \nDeviceType: ${deviceType}\noriginatorName: ${originatorName}\noriginatorType: ${originatorType}\n\nts_sum_circuit_active_energy_import: ${ts_sum_circuit_active_energy_import}\nts_rest_active_energy_import: $ {ts_rest_active_energy_import}\n\nmsg: ${msg}\n\nprevAlarmDetails: ${prevAlarmDetails}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 904,
          "layoutY": 540
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "rest = sum_main - sum_circuit",
        "debugMode": false,
        "configuration": {
          "jsScript": "// Convert message and store it as calc to POST_ATTRIBUTES_REQUEST\n// Calculate the \"rest\" power from total_power and - consumed_power\n\nvar msg_sa_rest = {};\n\nmsg_sa_rest.sa_rest_active_energy_import  = metadata.ss_sa_sum_main_active_energy_import  - metadata.ss_sa_sum_circuit_active_energy_import;\n\nreturn {msg: msg_sa_rest, metadata: metadata, msgType: msgType};\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 898,
          "layoutY": 483
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "rest = sum_main - sum_circuit",
        "debugMode": false,
        "configuration": {
          "jsScript": "// Convert message and store it as calc to POST_ATTRIBUTES_REQUEST\n// Calculate the \"rest\" power from total_power and - consumed_power\n\nvar msg_sa_rest = {};\n\nmsg_sa_rest.sa_rest_active_power_positive = metadata.ss_sa_sum_main_active_power_positive - metadata.ss_sa_sum_circuit_active_power_positive;\n\nreturn {msg: msg_sa_rest, metadata: metadata, msgType: msgType};\n"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1270,
          "layoutY": 549
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "script alarm",
        "debugMode": false,
        "configuration": {
          "alarmType": "General Alarm",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n}\nreturn details;\n",
          "severity": "CRITICAL",
          "propagate": false,
          "useMessageAlarmData": false
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1540,
          "layoutY": 549
        },
        "type": "org.thingsboard.rule.engine.mail.TbMsgToEmailNode",
        "name": "email",
        "debugMode": false,
        "configuration": {
          "fromTemplate": "no-reply@iots.no",
          "toTemplate": "jf@iotsolutions.no",
          "ccTemplate": null,
          "bccTemplate": null,
          "subjectTemplate": "Device ${deviceType} script error",
          "bodyTemplate": "Node: stormberg_aggregate_energy_power\n\nDevice: ${deviceName} \nDeviceType: ${deviceType}\nTs: ${ts}"
        }
      },
      {
        "additionalInfo": {
          "layoutX": 1804,
          "layoutY": 541
        },
        "type": "org.thingsboard.rule.engine.mail.TbSendEmailNode",
        "name": "send email",
        "debugMode": false,
        "configuration": {
          "useSystemSmtpSettings": true,
          "smtpHost": "localhost",
          "smtpPort": 25,
          "username": null,
          "password": null,
          "smtpProtocol": "smtp",
          "timeout": 10000,
          "enableTls": false
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 1,
        "toIndex": 3,
        "type": "True"
      },
      {
        "fromIndex": 2,
        "toIndex": 4,
        "type": "True"
      },
      {
        "fromIndex": 3,
        "toIndex": 44,
        "type": "Success"
      },
      {
        "fromIndex": 4,
        "toIndex": 43,
        "type": "Success"
      },
      {
        "fromIndex": 5,
        "toIndex": 42,
        "type": "Created"
      },
      {
        "fromIndex": 6,
        "toIndex": 5,
        "type": "True"
      },
      {
        "fromIndex": 7,
        "toIndex": 27,
        "type": "False"
      },
      {
        "fromIndex": 7,
        "toIndex": 38,
        "type": "True"
      },
      {
        "fromIndex": 8,
        "toIndex": 21,
        "type": "Success"
      },
      {
        "fromIndex": 13,
        "toIndex": 28,
        "type": "Success"
      },
      {
        "fromIndex": 13,
        "toIndex": 19,
        "type": "Failure"
      },
      {
        "fromIndex": 14,
        "toIndex": 7,
        "type": "Success"
      },
      {
        "fromIndex": 14,
        "toIndex": 31,
        "type": "Failure"
      },
      {
        "fromIndex": 14,
        "toIndex": 32,
        "type": "Failure"
      },
      {
        "fromIndex": 15,
        "toIndex": 35,
        "type": "Failure"
      },
      {
        "fromIndex": 15,
        "toIndex": 18,
        "type": "Success"
      },
      {
        "fromIndex": 16,
        "toIndex": 35,
        "type": "Failure"
      },
      {
        "fromIndex": 16,
        "toIndex": 11,
        "type": "Success"
      },
      {
        "fromIndex": 17,
        "toIndex": 23,
        "type": "Success"
      },
      {
        "fromIndex": 20,
        "toIndex": 2,
        "type": "Success"
      },
      {
        "fromIndex": 20,
        "toIndex": 1,
        "type": "Success"
      },
      {
        "fromIndex": 21,
        "toIndex": 14,
        "type": "Success"
      },
      {
        "fromIndex": 21,
        "toIndex": 20,
        "type": "Success"
      },
      {
        "fromIndex": 21,
        "toIndex": 32,
        "type": "Failure"
      },
      {
        "fromIndex": 22,
        "toIndex": 39,
        "type": "Success"
      },
      {
        "fromIndex": 22,
        "toIndex": 30,
        "type": "Failure"
      },
      {
        "fromIndex": 23,
        "toIndex": 9,
        "type": "Failure"
      },
      {
        "fromIndex": 23,
        "toIndex": 24,
        "type": "Success"
      },
      {
        "fromIndex": 25,
        "toIndex": 26,
        "type": "Device"
      },
      {
        "fromIndex": 26,
        "toIndex": 10,
        "type": "False"
      },
      {
        "fromIndex": 26,
        "toIndex": 29,
        "type": "True"
      },
      {
        "fromIndex": 28,
        "toIndex": 12,
        "type": "Success"
      },
      {
        "fromIndex": 29,
        "toIndex": 35,
        "type": "Failure"
      },
      {
        "fromIndex": 29,
        "toIndex": 15,
        "type": "main"
      },
      {
        "fromIndex": 29,
        "toIndex": 16,
        "type": "circuit"
      },
      {
        "fromIndex": 32,
        "toIndex": 33,
        "type": "Created"
      },
      {
        "fromIndex": 33,
        "toIndex": 34,
        "type": "Success"
      },
      {
        "fromIndex": 35,
        "toIndex": 36,
        "type": "Created"
      },
      {
        "fromIndex": 36,
        "toIndex": 37,
        "type": "Success"
      },
      {
        "fromIndex": 38,
        "toIndex": 27,
        "type": "Success"
      },
      {
        "fromIndex": 39,
        "toIndex": 8,
        "type": "Success"
      },
      {
        "fromIndex": 43,
        "toIndex": 14,
        "type": "Success"
      },
      {
        "fromIndex": 43,
        "toIndex": 45,
        "type": "Failure"
      },
      {
        "fromIndex": 43,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 44,
        "toIndex": 14,
        "type": "Success"
      },
      {
        "fromIndex": 44,
        "toIndex": 45,
        "type": "Failure"
      },
      {
        "fromIndex": 44,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 45,
        "toIndex": 46,
        "type": "Created"
      },
      {
        "fromIndex": 46,
        "toIndex": 47,
        "type": "Success"
      }
    ],
    "ruleChainConnections": null
  }
}